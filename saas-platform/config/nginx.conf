events {
    worker_connections 1024;
}

http {
    upstream saas_core {
        server saas-core:3000;
    }

    upstream client_projects {
        server monitoring-agent:3001;
        server monitoring-agent:3002;
        server monitoring-agent:3003;
        server monitoring-agent:3004;
        server monitoring-agent:3005;
    }

    server {
        listen 80;
        server_name localhost;

        # SaaS Core
        location / {
            proxy_pass http://saas_core;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Client projects
        location ~* ^/client/(\d+)/(.*) {
            set $client_port $1;
            set $client_path $2;
            proxy_pass http://monitoring-agent:$client_port/$client_path;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS server (optional)
    # server {
    #     listen 443 ssl;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     location / {
    #         proxy_pass http://saas_core;
    #         # ... same proxy settings as above
    #     }
    # }
}